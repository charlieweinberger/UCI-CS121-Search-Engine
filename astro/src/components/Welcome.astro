---

---

<div class="flex flex-col items-center justify-center min-h-[40vh] px-4">
  <h1 class="text-5xl font-normal mb-8 tracking-tighter">
    <span class="text-blue-500">G</span>
    <span class="text-red-500">e</span>
    <span class="text-yellow-500">e</span>
    <span class="text-blue-500">g</span>
    <span class="text-green-500">l</span>
    <span class="text-red-500">e</span>
  </h1>
  <form id="searchForm" class="w-full max-w-xl">
    <input
      type="text"
      name="query"
      placeholder="Search Geegle..."
      class="px-4 py-2 rounded-full border border-gray-300 mr-2 focus:outline-none focus:ring-2 focus:ring-gray-500 w-full shadow-sm"
    />
    <button
      type="submit"
      class="bg-black text-white px-4 py-2 rounded-md hover:bg-gray-800 transition-colors mt-6 mx-auto block"
    >
      <div class="shiny-text" style="animation-duration: 2s;">Search</div>
    </button>
  </form>
  <div id="results" class="mt-6"></div>
</div>
<style>
  @keyframes shine {
    0% {
      background-position: 100%;
    }
    100% {
      background-position: -100%;
    }
  }

  .shiny-text {
    color: #b5b5b599;
    background: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 40%,
      rgba(255, 255, 255, 0.8) 50%,
      rgba(255, 255, 255, 0) 60%
    );
    background-size: 200% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    display: inline-block;
    animation: shine 5s linear infinite;
  }

  .shiny-text.disabled {
    animation: none;
  }
</style>

<script>
  document
    .getElementById("searchForm")!
    .addEventListener("submit", async (event: Event) => {
      event.preventDefault();

      const formData = new FormData(event.target as HTMLFormElement);
      const query = formData.get("query");
      const resultsDiv = document.getElementById("results");

      if (!resultsDiv) return;
      try {
        const response = await fetch("http://127.0.0.1:3000/search", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ query }),
        });

        if (!response.ok) {
          throw new Error("Search failed");
        }

        const data = await response.json();
        resultsDiv.innerHTML = `<p class="text-green-600">Results found: ${data.results || "No results"}</p>`;
      } catch (error) {
        const errorMessage =
          error instanceof Error ? error.message : "Unknown error";
        resultsDiv.innerHTML = `<p class="text-red-600">Error: ${errorMessage}</p>`;
      }
    });
</script>
